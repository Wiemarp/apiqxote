// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiqxote.databaseqxote;

#nullable disable

namespace apiqxote.Migrations
{
    [DbContext(typeof(DatabaseqxoteContext))]
    [Migration("20231123210555_DatabaseV3")]
    partial class DatabaseV3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("apiqxote.Models.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("animal_id");

                    b.Property<string>("Abudance")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("abudance")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("CloudCover")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("cloud_cover")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Coordinates")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("coordinates")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Coverboards")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("coverboards")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("date")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("EndTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("end_time")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("SpeciesName")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("species_name")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("StartTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("start_time")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<double?>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("double")
                        .HasColumnName("temperature")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("WindSpeed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("wind_speed")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("zone");

                    b.HasKey("AnimalId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Zone" }, "fk_animal_zone1");

                    b.ToTable("animal", (string)null);
                });

            modelBuilder.Entity("apiqxote.Models.BioConcentration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Bcf")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("bcf")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<decimal?>("Cf")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("cf")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<decimal?>("Ctree")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("ctree")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<decimal?>("R")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("r")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Species")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("species")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("bio_concentration", (string)null);
                });

            modelBuilder.Entity("apiqxote.Models.Plant", b =>
                {
                    b.Property<int>("PlantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("plant_id");

                    b.Property<string>("Coordinate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("coordinate")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Cover")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("cover")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("date")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<float?>("Humidity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasColumnName("humidity")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("PlotNr")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("plot_nr")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Species")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("species")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Temperature")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("temperature")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Zone")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("zone");

                    b.HasKey("PlantId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Zone" }, "fk_plant_zone1");

                    b.ToTable("plant", (string)null);
                });

            modelBuilder.Entity("apiqxote.Models.Tree", b =>
                {
                    b.Property<int>("TreeNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("tree_nr");

                    b.Property<string>("Zone")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("zone");

                    b.Property<int>("BioConcentrationId")
                        .HasColumnType("int(11)")
                        .HasColumnName("bio_concentration_id");

                    b.Property<decimal?>("Circumference")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("circumference")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Coordinate")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("coordinate")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<decimal?>("Height")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("height")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("TreeName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tree_name");

                    b.Property<decimal?>("Volume")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("volume")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("TreeNr", "Zone")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "BioConcentrationId" }, "fk_tree_bio_concentration1");

                    b.HasIndex(new[] { "TreeName" }, "fk_tree_tree_name1");

                    b.HasIndex(new[] { "Zone" }, "fk_tree_zone1");

                    b.ToTable("tree", (string)null);
                });

            modelBuilder.Entity("apiqxote.Models.TreeName", b =>
                {
                    b.Property<string>("TreeName1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("tree_name");

                    b.Property<int?>("CoordinateCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("coordinate_count")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("TreeName1")
                        .HasName("PRIMARY");

                    b.ToTable("tree_name", (string)null);
                });

            modelBuilder.Entity("apiqxote.Models.Zone", b =>
                {
                    b.Property<string>("Zone1")
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("zone");

                    b.Property<int?>("Area")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("area")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("Classification")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("enum('homogenuis','no_homogenuis','transition')")
                        .HasColumnName("classification")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("Plots")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("plots")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("Zone1")
                        .HasName("PRIMARY");

                    b.ToTable("zone", (string)null);
                });

            modelBuilder.Entity("apiqxote.Models.Animal", b =>
                {
                    b.HasOne("apiqxote.Models.Zone", "ZoneNavigation")
                        .WithMany("Animals")
                        .HasForeignKey("Zone")
                        .IsRequired()
                        .HasConstraintName("fk_animal_zone1");

                    b.Navigation("ZoneNavigation");
                });

            modelBuilder.Entity("apiqxote.Models.Plant", b =>
                {
                    b.HasOne("apiqxote.Models.Zone", "ZoneNavigation")
                        .WithMany("Plants")
                        .HasForeignKey("Zone")
                        .IsRequired()
                        .HasConstraintName("fk_plant_zone1");

                    b.Navigation("ZoneNavigation");
                });

            modelBuilder.Entity("apiqxote.Models.Tree", b =>
                {
                    b.HasOne("apiqxote.Models.BioConcentration", "BioConcentration")
                        .WithMany("Trees")
                        .HasForeignKey("BioConcentrationId")
                        .IsRequired()
                        .HasConstraintName("fk_tree_bio_concentration1");

                    b.HasOne("apiqxote.Models.TreeName", "TreeNameNavigation")
                        .WithMany("Trees")
                        .HasForeignKey("TreeName")
                        .IsRequired()
                        .HasConstraintName("fk_tree_tree_name1");

                    b.HasOne("apiqxote.Models.Zone", "ZoneNavigation")
                        .WithMany("Trees")
                        .HasForeignKey("Zone")
                        .IsRequired()
                        .HasConstraintName("fk_tree_zone1");

                    b.Navigation("BioConcentration");

                    b.Navigation("TreeNameNavigation");

                    b.Navigation("ZoneNavigation");
                });

            modelBuilder.Entity("apiqxote.Models.BioConcentration", b =>
                {
                    b.Navigation("Trees");
                });

            modelBuilder.Entity("apiqxote.Models.TreeName", b =>
                {
                    b.Navigation("Trees");
                });

            modelBuilder.Entity("apiqxote.Models.Zone", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Plants");

                    b.Navigation("Trees");
                });
#pragma warning restore 612, 618
        }
    }
}
